// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// FFBScpp
arma::vec FFBScpp(const arma::mat& lambda_mat, const double& tau, const double m0, const double s0, const double delta);
RcppExport SEXP _dyRank_FFBScpp(SEXP lambda_matSEXP, SEXP tauSEXP, SEXP m0SEXP, SEXP s0SEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda_mat(lambda_matSEXP);
    Rcpp::traits::input_parameter< const double& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const double >::type m0(m0SEXP);
    Rcpp::traits::input_parameter< const double >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< const double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(FFBScpp(lambda_mat, tau, m0, s0, delta));
    return rcpp_result_gen;
END_RCPP
}
// update_counts_cpp
std::vector<arma::vec> update_counts_cpp(const std::vector<arma::vec>& c_mk, const std::vector<arma::ivec>& dat_GP, const std::vector<arma::ivec>& time_GP, const std::vector<arma::ivec>& delta, const arma::vec& lambda, const int& tr);
RcppExport SEXP _dyRank_update_counts_cpp(SEXP c_mkSEXP, SEXP dat_GPSEXP, SEXP time_GPSEXP, SEXP deltaSEXP, SEXP lambdaSEXP, SEXP trSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<arma::vec>& >::type c_mk(c_mkSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::ivec>& >::type dat_GP(dat_GPSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::ivec>& >::type time_GP(time_GPSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::ivec>& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const int& >::type tr(trSEXP);
    rcpp_result_gen = Rcpp::wrap(update_counts_cpp(c_mk, dat_GP, time_GP, delta, lambda, tr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dyRank_FFBScpp", (DL_FUNC) &_dyRank_FFBScpp, 5},
    {"_dyRank_update_counts_cpp", (DL_FUNC) &_dyRank_update_counts_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_dyRank(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
